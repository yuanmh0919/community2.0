2024-07-02 08:31:13,545 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 7300 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 08:31:13,554 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 08:31:13,617 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 08:31:13,617 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 08:31:13,618 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 08:31:14,665 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 08:31:14,668 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 08:31:14,693 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-02 08:31:15,543 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 08:31:15,553 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 08:31:15,554 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 08:31:15,554 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 08:31:15,604 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 08:31:15,605 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1986 ms
2024-07-02 08:31:15,666 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 08:31:16,642 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 08:31:17,215 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 08:31:17,266 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 08:31:17,277 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 08:31:17,314 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 08:31:17,363 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:31:17,444 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:31:17,445 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:31:17,445 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719880277442
2024-07-02 08:31:17,449 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 08:31:17,464 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 4.468 seconds (process running for 7.698)
2024-07-02 08:31:17,839 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:31:17,840 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 08:31:17,845 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:31:17,868 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-3d9b58cc-8a2c-4888-a8e3-4f7702acd285
2024-07-02 08:31:17,869 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:31:17,883 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=29, memberId='consumer-community-consumer-group-1-3d9b58cc-8a2c-4888-a8e3-4f7702acd285', protocol='range'}
2024-07-02 08:31:17,889 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 29: {consumer-community-consumer-group-1-3d9b58cc-8a2c-4888-a8e3-4f7702acd285=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 08:31:17,923 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=29, memberId='consumer-community-consumer-group-1-3d9b58cc-8a2c-4888-a8e3-4f7702acd285', protocol='range'}
2024-07-02 08:31:17,924 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 08:31:17,927 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 08:31:17,941 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:31:17,941 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:31:17,941 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:31:17,956 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 08:31:37,356 INFO [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 08:31:37,356 INFO [http-nio-8080-exec-4] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 08:31:37,357 INFO [http-nio-8080-exec-4] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 08:31:37,388 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:31:37,775 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:31:38,091 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:31:40,394 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:31:41,209 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:31:41,241 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:31:52,526 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:31:52,571 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:31:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:00,174 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:00,176 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.login]方法
2024-07-02 08:32:00,191 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 08:32:00,548 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5581d1b2
2024-07-02 08:32:00,550 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 08:32:00,653 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:00,654 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:00,700 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:00,705 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:00,708 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:00,710 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:00,712 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:00]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:03,509 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:03,510 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:03,514 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:32:03,527 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:32:03,531 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:03,535 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:32:03,537 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:03,538 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:03,540 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:04,323 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:04,324 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:04,326 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:32:04,475 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:04,478 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:04,480 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:04,482 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:32:04,484 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:04,485 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:04,487 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:04,489 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:32:04,491 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:04,492 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:04,494 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:04,495 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:04,497 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:18,579 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:18,582 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:18,587 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,605 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,605 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,605 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,605 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,622 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,622 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,622 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,622 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:18,638 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:18]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:32:20,965 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:20,966 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:20,969 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:32:20,974 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:32:20,978 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:20,980 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:32:20,983 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:20,984 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:20,987 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:32:20,990 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:20,994 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:20,997 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:32:21,008 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:21,014 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:21,016 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:32:21,019 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:21,021 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:21,024 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:32:21,026 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:21,030 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:21,033 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:21,709 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:21,711 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:21,711 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:32:21,714 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:21,715 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:21,717 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:21,719 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:32:21,722 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:21,725 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:21,727 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:21,729 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:32:21,731 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:21,732 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:21,735 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:21,737 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:32:21,738 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:32:27,948 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:27,949 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,954 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:32:27,958 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:32:27,965 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,966 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,971 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,972 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,973 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,978 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,979 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,984 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,985 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,990 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:32:27,991 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.readMessage]方法
2024-07-02 08:32:28,050 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:32:28,052 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:32:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:34:54,889 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 08:34:54,890 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 08:34:54,890 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-3d9b58cc-8a2c-4888-a8e3-4f7702acd285 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 08:34:54,890 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:34:54,890 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:34:54,890 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 08:34:54,891 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:34:54,892 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:34:55,339 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 08:34:55,339 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 08:34:55,339 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 08:34:55,339 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 08:34:55,346 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 08:34:55,347 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 08:34:55,640 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 08:34:55,703 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 08:35:02,364 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 11344 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 08:35:02,367 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 08:35:02,409 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 08:35:02,409 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 08:35:02,409 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 08:35:02,995 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 08:35:02,998 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 08:35:03,018 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-02 08:35:03,696 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 08:35:03,705 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 08:35:03,706 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 08:35:03,707 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 08:35:03,744 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 08:35:03,745 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1335 ms
2024-07-02 08:35:03,806 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 08:35:04,516 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 08:35:05,032 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 08:35:05,074 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 08:35:05,086 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 08:35:05,115 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 08:35:05,150 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:35:05,216 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:35:05,217 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:35:05,217 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719880505214
2024-07-02 08:35:05,219 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 08:35:05,231 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.472 seconds (process running for 4.426)
2024-07-02 08:35:05,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:35:05,504 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 08:35:05,508 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:35:05,517 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-fa880872-2cf6-4dfe-861d-d6d861590fc9
2024-07-02 08:35:05,518 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:35:05,521 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=31, memberId='consumer-community-consumer-group-1-fa880872-2cf6-4dfe-861d-d6d861590fc9', protocol='range'}
2024-07-02 08:35:05,526 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 31: {consumer-community-consumer-group-1-fa880872-2cf6-4dfe-861d-d6d861590fc9=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 08:35:05,531 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=31, memberId='consumer-community-consumer-group-1-fa880872-2cf6-4dfe-861d-d6d861590fc9', protocol='range'}
2024-07-02 08:35:05,532 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 08:35:05,533 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 08:35:05,539 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:35:05,540 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:35:05,540 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:35:05,548 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 08:35:09,467 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 08:35:09,467 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 08:35:09,468 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 08:35:09,499 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:09,830 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:09,858 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:35:09,871 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 08:35:10,127 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74ed9055
2024-07-02 08:35:10,129 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 08:35:10,181 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:35:10,302 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,304 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,305 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,306 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,307 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,308 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,310 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,311 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,312 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:10,313 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:13,401 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:13,402 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:13,405 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:35:13,409 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:35:13,414 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:13,429 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:35:13,431 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:13,432 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:13,434 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:35:13,436 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:13,437 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:13,439 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:35:13,442 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:13,443 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:13,445 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:35:13,447 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:13,448 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:13,450 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:35:13,452 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:13,453 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:13,455 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:35:14,826 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:14,827 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:14,828 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:35:14,832 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:14,834 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:35:14,836 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:14,837 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:35:14,841 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:14,842 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:35:14,844 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:14,845 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:35:14,847 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:14,848 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:35:14,850 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:14,851 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:35:14,853 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:35:18,541 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:18,541 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,542 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:35:18,545 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:35:18,549 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,550 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,551 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,552 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,553 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,553 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,554 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,555 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,555 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:18,574 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,785 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:26,786 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,788 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:35:26,791 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:35:26,794 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,799 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,801 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,804 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,805 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,806 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,807 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,808 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,809 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:26,809 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,958 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:29,959 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,960 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:35:29,963 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:35:29,966 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,967 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,968 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,969 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,969 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,970 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,971 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,971 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,973 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:29,974 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,781 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:31,783 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,784 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:35:31,788 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:35:31,791 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,792 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,792 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,795 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,796 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,796 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:31,797 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.readMessage]方法
2024-07-02 08:35:34,068 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:34,069 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:34,071 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:35:34,074 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:35:34,077 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:34,078 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:34,079 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:34,080 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:34,080 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:34,081 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:37,022 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:37,023 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:37,024 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:35:37,027 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:35:37,029 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:37,030 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:37,031 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:37,032 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:37,033 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:37,033 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:39,113 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:39,114 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:35:39,124 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:35:39,125 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:35:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:00,316 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:36:00,317 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:00,318 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:36:00,321 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:36:00,324 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:00,326 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:36:00,328 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:00,329 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:00,332 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:36:00,334 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:00,335 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:00,336 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:36:00,338 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:00,339 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:00,340 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:36:00,342 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:00,343 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:00,344 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:36:00,346 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:00,347 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:00,349 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:36:01,264 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:36:01,265 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:01,265 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:36:01,269 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:01,270 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:36:01,271 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:01,273 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:36:01,275 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:01,276 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:36:01,277 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:01,280 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:36:01,282 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:01,282 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:36:01,284 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:01,285 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:36:01,286 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:36:05,511 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:36:05,512 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,513 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:36:05,516 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:36:05,518 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,519 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,519 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,520 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,520 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,521 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,521 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,522 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,522 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:05,523 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,160 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:36:39,161 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,162 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:36:39,164 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:36:39,168 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,168 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,169 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,170 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,171 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,171 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,172 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,172 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,173 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:39,174 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,378 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:36:42,378 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,380 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:36:42,383 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:36:42,385 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,386 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,387 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,388 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,388 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,388 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,389 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,391 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,391 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:42,391 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:46,270 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:36:46,271 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:36:46,275 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:36:46,276 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:36:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:37,468 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 08:37:37,468 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 08:37:37,468 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-fa880872-2cf6-4dfe-861d-d6d861590fc9 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 08:37:37,469 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:37:37,469 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:37:37,469 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 08:37:37,470 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:37:37,470 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:37:37,807 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 08:37:37,807 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 08:37:37,807 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 08:37:37,807 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 08:37:37,814 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 08:37:37,814 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 08:37:38,014 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 08:37:38,024 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 08:37:41,688 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 18428 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 08:37:41,690 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 08:37:41,771 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 08:37:41,772 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 08:37:41,772 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 08:37:42,614 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 08:37:42,617 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 08:37:42,637 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-02 08:37:43,346 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 08:37:43,354 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 08:37:43,356 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 08:37:43,356 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 08:37:43,408 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 08:37:43,409 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1632 ms
2024-07-02 08:37:43,461 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 08:37:44,176 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 08:37:44,685 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 08:37:44,732 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 08:37:44,750 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 08:37:44,780 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 08:37:44,815 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:37:44,874 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:37:44,875 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:37:44,875 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719880664873
2024-07-02 08:37:44,878 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 08:37:44,890 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 4.169 seconds (process running for 5.417)
2024-07-02 08:37:45,166 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:37:45,166 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 08:37:45,171 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:37:45,180 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-47f8968e-fbde-45c7-9c56-0a75c3a13286
2024-07-02 08:37:45,181 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:37:45,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=33, memberId='consumer-community-consumer-group-1-47f8968e-fbde-45c7-9c56-0a75c3a13286', protocol='range'}
2024-07-02 08:37:45,190 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 33: {consumer-community-consumer-group-1-47f8968e-fbde-45c7-9c56-0a75c3a13286=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 08:37:45,194 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=33, memberId='consumer-community-consumer-group-1-47f8968e-fbde-45c7-9c56-0a75c3a13286', protocol='range'}
2024-07-02 08:37:45,195 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 08:37:45,197 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 08:37:45,203 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:37:45,204 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:37:45,204 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:37:45,213 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 08:37:50,495 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 08:37:50,496 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 08:37:50,497 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 08:37:50,526 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:37:50,854 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:50,880 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:50]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:37:50,892 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 08:37:51,148 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7589afd3
2024-07-02 08:37:51,150 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 08:37:51,208 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:37:51,324 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,324 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,326 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,327 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,327 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,328 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,329 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,330 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,331 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:51,332 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:52,842 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:37:52,843 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:52,845 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:37:52,849 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:37:52,854 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:52,869 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:37:52,870 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:52,872 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:52,874 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:37:52,876 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:52,877 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:52,879 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:37:52,881 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:52,882 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:52,884 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:37:52,885 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:52,886 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:52,888 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:37:52,889 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:52,890 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:52,893 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:37:54,625 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:37:54,626 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:54,627 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:37:54,631 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:54,633 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:37:54,635 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:54,636 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:37:54,640 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:54,641 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:37:54,643 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:54,645 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:37:54,647 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:54,648 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:37:54,649 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:54,651 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:37:54,652 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:37:55,780 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:37:55,782 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,783 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:37:55,786 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:37:55,789 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,790 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,791 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,792 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,793 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,794 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,795 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,796 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,797 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:55,798 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,182 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:37:57,183 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,185 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:37:57,191 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,192 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,194 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,202 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:37:57,216 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,216 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:37:57,219 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,219 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,221 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,222 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,223 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,223 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,224 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,225 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,225 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:37:57,228 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,229 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:37:57,231 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,231 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,232 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:37:57,233 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,234 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:37:57,236 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,237 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,238 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:37:57,240 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,241 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:37:57,242 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,243 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,244 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:37:57,245 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:37:57,246 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:37:57,247 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:37:57,248 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:37:57,249 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:37:57]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:03,954 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:03,955 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:10,479 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:10,480 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:10,481 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:38:10,484 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:10,485 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:10,487 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:10,489 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:38:10,491 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:10,492 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:10,494 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:10,495 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:38:10,497 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:10,498 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:10,499 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:10,501 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:10,502 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:14,938 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:14,939 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,940 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:38:14,943 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:38:14,946 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,947 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,948 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,949 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,949 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,950 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,950 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,951 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,951 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:14,952 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,411 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:16,411 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,412 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:38:16,415 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,416 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:16,417 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:16,419 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:16,421 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,422 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:16,424 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:16,425 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:16,425 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:16,427 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,427 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:16,429 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:16,429 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:16,430 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:16,432 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,432 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:16,434 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:16,435 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:16,436 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:16,437 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,438 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:16,440 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:16,440 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:16,442 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:16,443 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:16,444 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:16,445 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:16,445 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:16,446 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:16]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:20,010 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:20,012 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,013 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:38:20,016 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,018 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,019 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,019 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:20,022 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,023 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:20,025 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,025 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,026 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,027 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,027 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,028 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,028 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,028 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,029 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:20,030 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,031 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:20,033 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,034 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,035 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:20,036 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,037 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:20,038 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,039 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,039 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:20,041 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,041 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:20,043 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,043 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,044 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:20,045 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:20,046 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:20,048 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:20,049 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:20,050 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:20]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:24,539 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:24,540 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:24,541 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:38:24,544 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:24,545 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:24,546 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:24,546 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:24,549 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:24,549 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:24,551 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:24,552 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:24,552 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:24,553 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:24,554 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:24,556 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:24,556 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:24,557 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:24,558 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:24,558 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:24,560 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:24,561 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:24,562 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:24,564 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:24,564 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:24,566 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:24,566 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:24,567 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:24,568 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:24,568 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:24,570 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:24,570 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:24,571 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:24]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:29,376 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:29,377 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,378 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:38:29,381 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:38:29,384 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,384 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,385 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,386 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,387 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,387 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,388 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,388 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,389 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,390 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:29,391 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.readMessage]方法
2024-07-02 08:38:37,971 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:37,972 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:37,973 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:38:37,976 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:37,978 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:37,978 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:37,979 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:37,982 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:37,983 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:37,985 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:37,985 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:37,986 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:37,988 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:37,989 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:37,990 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:37,991 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:37,991 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:37,992 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:37,992 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:37,992 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:37,993 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:37,994 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:37,995 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:37,996 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:37,996 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:37,997 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:37,997 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:37,998 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:37,999 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:38,000 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:38,002 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:38,002 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:38,003 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:38,005 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:38,005 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:38,007 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:38,007 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:38,007 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:38]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:41,442 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:41,443 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,444 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:38:41,447 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,448 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,448 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,449 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:41,452 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,452 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:41,454 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,454 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,455 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:41,456 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,457 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:41,459 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,459 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,459 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,459 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,460 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,460 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:41,462 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,463 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:41,464 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,464 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,465 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,466 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,466 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,466 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:41,467 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,468 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:41,469 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,470 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,470 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:41,471 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:41,472 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:38:41,473 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:41,473 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:41,474 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:41]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:38:43,734 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:43,735 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:50,102 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:50,103 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:50,104 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:50]访问了[com.yuanmh.community.service.LikeService.like]方法
2024-07-02 08:38:50,151 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:50]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:38:50,152 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:50]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:38:50,183 INFO [http-nio-8080-exec-4] o.a.k.c.p.ProducerConfig [AbstractConfig.java:370] ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-02 08:38:50,184 INFO [http-nio-8080-exec-4] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:38:50,194 INFO [http-nio-8080-exec-4] o.a.k.c.p.KafkaProducer [KafkaProducer.java:597] [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-07-02 08:38:50,207 INFO [http-nio-8080-exec-4] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:38:50,207 INFO [http-nio-8080-exec-4] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:38:50,207 INFO [http-nio-8080-exec-4] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719880730207
2024-07-02 08:38:50,213 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.Metadata [Metadata.java:349] [Producer clientId=producer-1] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:38:50,331 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.p.i.TransactionManager [TransactionManager.java:502] [Producer clientId=producer-1] ProducerId set to 3000 with epoch 0
2024-07-02 08:38:53,025 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:53,026 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:53,027 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:38:53,030 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:38:53,033 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:53,036 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:38:53,037 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:53,038 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:53,040 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:38:53,041 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:53,042 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:53,044 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:38:53,045 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:53,046 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:53,048 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:38:53,051 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:53,052 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:53,054 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:38:53,057 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:53,057 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:53,059 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:54,139 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:54,140 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:54,141 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:38:54,145 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:54,145 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:54,147 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:54,149 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:38:54,151 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:54,153 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:54,153 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:54,156 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:38:54,156 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:54,157 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:54,158 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:54,160 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:38:54,162 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:38:55,503 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:38:55,504 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,505 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:38:55,507 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:38:55,510 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,511 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,512 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,512 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,513 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,514 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,516 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,517 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,518 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:38:55,519 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:38:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:39:53,245 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 08:39:53,245 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 08:39:53,245 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-47f8968e-fbde-45c7-9c56-0a75c3a13286 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 08:39:53,246 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:39:53,246 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:39:53,246 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 08:39:53,247 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:39:53,247 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:39:53,661 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 08:39:53,661 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 08:39:53,661 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 08:39:53,661 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 08:39:53,666 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 08:39:53,667 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 08:39:53,868 INFO [SpringApplicationShutdownHook] o.a.k.c.p.KafkaProducer [KafkaProducer.java:1346] [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-07-02 08:39:53,873 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 08:39:53,874 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 08:39:53,874 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 08:39:53,874 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 08:39:53,874 INFO [SpringApplicationShutdownHook] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.producer for producer-1 unregistered
2024-07-02 08:39:53,880 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 08:39:53,885 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 08:40:00,912 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 18184 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 08:40:00,914 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 08:40:00,952 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 08:40:00,952 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 08:40:00,952 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 08:40:01,915 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 08:40:01,917 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 08:40:01,939 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-02 08:40:02,792 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 08:40:02,801 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 08:40:02,803 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 08:40:02,803 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 08:40:02,840 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 08:40:02,843 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1888 ms
2024-07-02 08:40:02,911 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 08:40:03,773 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 08:40:04,346 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 08:40:04,397 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 08:40:04,410 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 08:40:04,446 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 08:40:04,486 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:40:04,556 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:40:04,557 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:40:04,557 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719880804555
2024-07-02 08:40:04,562 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 08:40:04,578 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 4.077 seconds (process running for 8.208)
2024-07-02 08:40:04,874 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:40:04,874 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 08:40:04,878 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:40:04,889 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-89c2ed73-7961-4bc6-b790-d2a34731b035
2024-07-02 08:40:04,890 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:40:04,893 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=35, memberId='consumer-community-consumer-group-1-89c2ed73-7961-4bc6-b790-d2a34731b035', protocol='range'}
2024-07-02 08:40:04,897 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 35: {consumer-community-consumer-group-1-89c2ed73-7961-4bc6-b790-d2a34731b035=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 08:40:04,903 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=35, memberId='consumer-community-consumer-group-1-89c2ed73-7961-4bc6-b790-d2a34731b035', protocol='range'}
2024-07-02 08:40:04,904 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 08:40:04,906 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 08:40:04,912 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:40:04,913 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:40:04,913 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:40:04,920 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 08:40:11,104 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 08:40:11,104 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 08:40:11,105 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 08:40:11,136 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:40:11,473 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,499 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:40:11,511 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 08:40:11,783 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d67a1ac
2024-07-02 08:40:11,784 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 08:40:11,836 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:40:11,961 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,962 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,963 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,964 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,965 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,966 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,967 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,968 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,969 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:11,970 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,709 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:40:19,710 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,713 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:40:19,716 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:40:19,721 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,722 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,723 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,724 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,725 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,727 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,728 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,729 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,730 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:19,731 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,037 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:40:27,038 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,040 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:40:27,043 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:40:27,046 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,048 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,049 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,050 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,051 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,051 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,052 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,053 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,054 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:27,054 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,600 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:40:31,602 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,603 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:40:31,607 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:40:31,610 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,611 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,613 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,614 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,615 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,615 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,616 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,617 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,618 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:31,619 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:33,897 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:40:33,898 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:33,901 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:33,902 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:33]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 08:40:33,908 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:33]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 08:40:33,911 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:33]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 08:40:33,911 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:33]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 08:40:37,699 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:40:37,700 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:37,701 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:40:37,701 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:37]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 08:40:37,702 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:37]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 08:40:37,704 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:37]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 08:40:37,704 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:40:37]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 08:41:41,367 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:41:41,368 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:41,370 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:41:41,374 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:41:41,379 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:41,394 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:41,396 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:41,397 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:41,399 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:41,400 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:41,401 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:41,403 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:41,404 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:41,405 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:41,406 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:41,408 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:41,409 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:41,411 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:41,412 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:41,413 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:41,415 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:43,091 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:41:43,092 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:43,093 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:41:43,097 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:43,098 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:43,101 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:43,102 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:41:43,105 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:43,105 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:43,107 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:43,109 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:41:43,112 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:43,113 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:43,115 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:43,116 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:43,118 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:45,102 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:41:45,103 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:45,105 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:41:45,108 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:41:45,111 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:45,113 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:45,114 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:45,115 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:45,117 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:45,118 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:45,119 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:45,120 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:45,122 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:45,122 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:45,124 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:45,126 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:45,127 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:45,128 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:41:45,129 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:45,130 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:45,132 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:46,250 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:41:46,251 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:46,252 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:41:46,256 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:46,257 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:46,258 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:46,260 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:41:46,263 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:46,263 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:46,265 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:46,267 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:41:46,269 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:41:46,269 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:41:46,271 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:46,273 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:41:46,274 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:41:46]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:43:41,240 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:43:41,241 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,243 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:43:41,246 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:43:41,250 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,251 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,253 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,254 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,256 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,257 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:43:41,258 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,259 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,261 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:43:41,264 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:43:41,268 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,269 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,270 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,272 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,273 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:41,275 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:42,354 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:43:42,355 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:42,355 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:43:42,358 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:42,359 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:43:42,360 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:43:42,362 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:43:42,364 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:42,365 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:43:42,367 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:43:42,369 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:43:42,370 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:43:42,371 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:43:42,373 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:43:42,374 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:43:42,375 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:43:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:00,372 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:44:00,373 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:00,374 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:44:00,376 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:44:00,378 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:00,378 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:00,379 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:00,380 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:00,380 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:00,381 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:01,631 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:44:01,632 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:01,633 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:01,635 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:01,636 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:01,637 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:01,638 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:01,640 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:01,641 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:01,643 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:01,644 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:01,647 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:01,648 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:01,650 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:01,651 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:01,652 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:03,274 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:44:03,275 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:03,276 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:44:03,279 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:44:03,281 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:03,282 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:03,283 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:03,283 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:03,284 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:03,284 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:07,173 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:44:07,174 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:07,175 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:07,178 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:07,179 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:07,180 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:07,182 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:07,184 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:07,184 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:07,186 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:07,188 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:07,190 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:07,191 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:07,192 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:07,194 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:07,195 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:12,083 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:44:12,084 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:12,085 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:44:12,088 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:44:12,090 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:12,091 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:12,091 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:12,092 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:12,092 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:12,093 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:15,558 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:44:15,559 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:15,560 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:15,562 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:15,563 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:15,565 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:15,567 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:15,569 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:15,570 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:15,571 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:15,573 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:44:15,575 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:44:15,575 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:44:15,577 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:15,579 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:44:15,581 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:44:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:49:05,132 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node -1 disconnected.
2024-07-02 08:50:10,753 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 08:50:10,754 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 08:50:10,754 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-89c2ed73-7961-4bc6-b790-d2a34731b035 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 08:50:10,755 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:50:10,755 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:50:10,755 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 08:50:10,756 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:50:10,756 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:50:11,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 08:50:11,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 08:50:11,016 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 08:50:11,016 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 08:50:11,055 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 08:50:11,056 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 08:50:11,200 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 08:50:11,208 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 08:50:16,140 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 9776 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 08:50:16,142 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 08:50:16,187 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 08:50:16,187 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 08:50:16,188 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 08:50:16,879 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 08:50:16,882 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 08:50:16,901 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-02 08:50:17,588 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 08:50:17,597 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 08:50:17,599 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 08:50:17,599 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 08:50:17,646 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 08:50:17,646 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1458 ms
2024-07-02 08:50:17,705 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 08:50:18,439 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 08:50:18,951 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 08:50:18,999 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 08:50:19,009 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 08:50:19,038 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 08:50:19,073 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:50:19,135 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:50:19,136 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:50:19,136 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719881419133
2024-07-02 08:50:19,139 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 08:50:19,151 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.419 seconds (process running for 4.026)
2024-07-02 08:50:19,423 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:50:19,424 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 08:50:19,428 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:50:19,437 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-44fde7a2-d67c-45d1-80e3-024616e5b6e7
2024-07-02 08:50:19,438 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:50:19,441 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=37, memberId='consumer-community-consumer-group-1-44fde7a2-d67c-45d1-80e3-024616e5b6e7', protocol='range'}
2024-07-02 08:50:19,446 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 37: {consumer-community-consumer-group-1-44fde7a2-d67c-45d1-80e3-024616e5b6e7=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 08:50:19,451 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=37, memberId='consumer-community-consumer-group-1-44fde7a2-d67c-45d1-80e3-024616e5b6e7', protocol='range'}
2024-07-02 08:50:19,451 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 08:50:19,453 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 08:50:19,459 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:50:19,459 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:50:19,460 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:50:19,468 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 08:50:22,403 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 08:50:22,403 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 08:50:22,405 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 08:50:22,435 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:50:22,780 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:22,794 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:22,806 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 08:50:23,059 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1de09519
2024-07-02 08:50:23,061 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 08:50:23,237 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:23,239 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:23,244 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:23,259 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:23,263 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:23,264 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:23,267 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:23,270 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:23,273 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:23,275 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:23,277 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:23,279 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:23,281 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:50:25,393 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:50:25,394 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:25,396 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:25,398 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:25,399 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:25,401 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:25,404 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:25,407 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:25,408 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:25,410 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:25,412 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:25,414 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:25,415 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:25,417 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:25,419 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:25,421 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:50:27,677 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:50:27,679 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:27,685 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:27,687 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:50:27,690 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:27,691 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:27,692 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:27,693 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:27,694 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:27,695 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:30,541 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:50:30,542 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:30,543 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:30,545 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:50:30,548 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:30,549 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:31,773 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:50:31,775 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:31,776 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:31,780 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:50:31,783 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:31,784 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,016 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:50:33,017 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,019 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:33,021 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:50:33,024 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,025 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,025 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,026 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,027 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,027 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,029 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:33,030 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:39,127 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:50:39,129 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:39,130 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:39,133 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:39,135 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:39,136 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:39,138 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:39,141 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:39,142 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:39,144 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:39,145 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:50:39,147 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:50:39,148 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:50:39,150 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:39,151 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:50:39,153 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:50:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:33,612 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 08:54:33,613 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 08:54:33,614 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-44fde7a2-d67c-45d1-80e3-024616e5b6e7 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 08:54:33,614 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:54:33,614 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:54:33,614 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 08:54:33,616 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:54:33,616 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:54:33,842 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 08:54:33,842 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 08:54:33,843 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 08:54:33,843 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 08:54:33,847 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 08:54:33,848 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 08:54:34,026 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 08:54:34,034 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 08:54:37,676 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 18308 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 08:54:37,678 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 08:54:37,725 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 08:54:37,726 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 08:54:37,726 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 08:54:38,475 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 08:54:38,478 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 08:54:38,510 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-07-02 08:54:39,316 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 08:54:39,324 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 08:54:39,325 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 08:54:39,326 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 08:54:39,358 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 08:54:39,359 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1632 ms
2024-07-02 08:54:39,425 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 08:54:40,137 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 08:54:40,639 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 08:54:40,682 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 08:54:40,692 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 08:54:40,721 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 08:54:40,761 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:54:40,825 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:54:40,826 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:54:40,826 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719881680823
2024-07-02 08:54:40,828 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 08:54:40,841 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.791 seconds (process running for 4.583)
2024-07-02 08:54:41,116 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:54:41,117 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 08:54:41,121 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:54:41,130 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-bfd66eda-f396-496e-b2af-7821309b8b2e
2024-07-02 08:54:41,131 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:54:41,134 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=39, memberId='consumer-community-consumer-group-1-bfd66eda-f396-496e-b2af-7821309b8b2e', protocol='range'}
2024-07-02 08:54:41,139 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 39: {consumer-community-consumer-group-1-bfd66eda-f396-496e-b2af-7821309b8b2e=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 08:54:41,143 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=39, memberId='consumer-community-consumer-group-1-bfd66eda-f396-496e-b2af-7821309b8b2e', protocol='range'}
2024-07-02 08:54:41,143 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 08:54:41,145 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 08:54:41,151 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:54:41,152 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:54:41,152 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:54:41,160 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 08:54:46,805 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 08:54:46,806 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 08:54:46,807 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 08:54:46,835 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:47,169 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:47,185 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:47,197 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 08:54:47,457 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4fb70d39
2024-07-02 08:54:47,459 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 08:54:47,623 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:47,625 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:47,630 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:47,645 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:47,647 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:47,648 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:47,650 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:47,652 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:47,655 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:47,656 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:47,658 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:47,660 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:47,662 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:49,406 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:49,407 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:49,409 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:49,411 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:49,412 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:49,414 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:49,416 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:49,418 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:49,419 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:49,422 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:49,424 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:49,426 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:49,427 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:49,429 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:49,430 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:49,432 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:52,611 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:52,612 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:52,613 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:52,617 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:52,618 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:52,620 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:52,622 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:52,624 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:52,625 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:52,627 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:52,629 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:52,631 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:52,632 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:52,633 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:52,635 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:52,637 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:53,725 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:53,726 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:53,727 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:53,731 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:53,732 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:53,734 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:53,735 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:53,737 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:53,738 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:53,740 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:53,741 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:53,743 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:53,744 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:53,745 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:53,747 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:53,748 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:54,871 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:54,872 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:54,873 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:54,876 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:54,878 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:54,880 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:54,881 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:54,883 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:54,884 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:54,886 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:54,888 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:54,890 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:54,891 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:54,892 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:54,894 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:54,895 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:55,537 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:55,538 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:55,539 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:55,541 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:55,542 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:55,543 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:55,545 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:55,547 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:55,548 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:55,550 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:55,551 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:55,554 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:55,556 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:55,558 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:55,560 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:55,561 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:56,060 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:56,068 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:56,070 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:56,073 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:56,074 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:56,076 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:56,077 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:56,080 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:56,081 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:56,084 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:56,086 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:56,088 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:56,089 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:56,091 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:56,092 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:56,094 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:57,362 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:57,363 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:57,364 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:57,368 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:57,369 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:57,371 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:57,372 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:57,374 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:57,375 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:57,376 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:57,378 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:57,380 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:57,381 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:57,383 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:57,385 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:57,386 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:58,819 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:58,820 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:58,821 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:58,824 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:58,825 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:58,827 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:58,829 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:58,831 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:58,832 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:58,833 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:58,835 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:54:58,837 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:58,838 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:54:58,839 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:58,840 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:58,842 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:54:59,518 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:54:59,519 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:59,525 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:54:59,527 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:54:59,531 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:59,533 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:54:59,535 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:59,536 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:59,537 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:54:59,539 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:59,539 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:59,541 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:54:59,542 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:59,543 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:59,545 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:54:59,547 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:59,547 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:59,549 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:54:59,550 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:54:59,551 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:54:59,553 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:54:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:55:01,007 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:55:01,008 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:01,009 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:55:01,013 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:01,014 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:55:01,016 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:01,017 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:55:01,019 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:01,020 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:55:01,021 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:01,023 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:55:01,025 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:01,026 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:55:01,028 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:01,030 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:01,031 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:55:40,751 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:55:40,752 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:40,753 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:55:40,755 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:40,757 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:55:40,759 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:40,761 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:55:40,766 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:40,767 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:55:40,769 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:40,771 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:55:40,773 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:40,774 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:55:40,776 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:40,778 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:55:40,779 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:55:56,335 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:55:56,336 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,338 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:55:56,341 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:55:56,344 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,346 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,347 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,348 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,348 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,349 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,350 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:56,351 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:58,162 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:55:58,163 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:58,165 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:55:58,166 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:58]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 08:55:58,174 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:58]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 08:55:58,176 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:58]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 08:55:58,177 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:55:58]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 08:56:02,714 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:56:02,715 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:02,716 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:02,717 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:02]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 08:56:02,718 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:02]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 08:56:02,719 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:02]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 08:56:02,720 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:02]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 08:56:09,802 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:56:09,803 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:09,804 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:09,806 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:56:09,807 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:09,808 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:09,808 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:09,809 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:09,809 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:09,810 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:40,251 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:56:40,252 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:40,253 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:56:40,257 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:40,258 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:40,260 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:40,262 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:56:40,264 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:40,264 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:40,266 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:40,268 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:56:40,270 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:40,272 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:40,274 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:40,276 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:40,278 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:56:51,381 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:56:51,382 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:51,383 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:56:51,386 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:51,387 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:51,389 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:51,390 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:56:51,392 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:51,393 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:51,395 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:51,397 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:56:51,398 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:51,399 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:51,401 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:51,402 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:56:51,403 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:56:55,193 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:56:55,194 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,195 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:55,197 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:56:55,200 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,200 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,201 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,202 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,202 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,203 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,204 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,204 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,205 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:55,206 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,447 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:56:58,448 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,450 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:58,453 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:56:58,455 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,456 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,457 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,457 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,458 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,459 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,459 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,474 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,475 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:58,476 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,968 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:56:59,969 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,970 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:56:59,972 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:56:59,975 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,976 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,977 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,978 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,979 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,980 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,981 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,981 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,982 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:56:59,983 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:56:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:02,012 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:02,013 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:02,014 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:57:02,017 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:57:02,019 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:02,021 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:02,022 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:02,023 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:02,024 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:02,025 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:02,026 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:02,027 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:02,028 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:02,029 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:02,031 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:02,032 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:02,033 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:02,034 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:02,035 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:02,036 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:02,037 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:57:03,454 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:03,455 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:03,456 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:03,459 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:03,459 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:03,461 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:03,463 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:03,465 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:03,466 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:03,467 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:03,469 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:03,470 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:03,471 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:03,472 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:03,473 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:03,475 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:57:04,278 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:04,278 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,279 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:04,282 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:04,284 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,285 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,286 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,286 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,287 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,287 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,289 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,290 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,290 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:04,291 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,455 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:06,456 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,457 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:06,459 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:06,462 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,463 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,463 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,464 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,465 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,465 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,466 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,466 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,467 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:06,467 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:06]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,738 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:07,739 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,740 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:07,743 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:07,745 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,746 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,747 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,748 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,749 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,749 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,750 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,751 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,751 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:07,752 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:09,069 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:09,069 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:09,070 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:09,073 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:09,076 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:09,076 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:09,077 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:09,078 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:09,078 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:09,079 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:11,990 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:11,990 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:11,991 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:11,994 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:11,996 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:11,996 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:11,997 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:11,998 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:11,999 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,000 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,870 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:12,871 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,871 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:12,874 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:12,877 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,878 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,878 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,879 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,879 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,880 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,880 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,880 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,881 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:12,881 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:14,000 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:14,001 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:14,002 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:14,005 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:14,006 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:14,008 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:14,009 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:14,011 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:14,012 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:14,013 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:14,015 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:14,017 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:14,018 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:14,020 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:14,022 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:14,023 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:57:15,824 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:15,824 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,825 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:15,827 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:15,829 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,830 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,830 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,831 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,832 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,832 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,832 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,833 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,834 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:15,835 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,763 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:17,764 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,765 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:17,767 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:17,770 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,770 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,771 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,773 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,774 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,774 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,775 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,776 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,776 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:17,777 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,402 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:19,403 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,404 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:19,406 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:57:19,409 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,410 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,411 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,412 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,413 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,414 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,415 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,416 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,416 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:19,417 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:20,844 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:20,845 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:20,846 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:20,849 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:20,850 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:20,852 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:20,854 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:20,855 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:20,856 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:20,858 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:20,859 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:20,861 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:20,861 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:20,864 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:20,866 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:20,867 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:20]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:57:22,430 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:22,431 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:22,431 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:57:22,433 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:57:22,437 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:22,438 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:22,440 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:22,440 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:22,442 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:22,443 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:22,444 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:22,445 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:22,447 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:22,447 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:22,448 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:22,449 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:22,450 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:22,451 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:57:22,453 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:22,453 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:22,454 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:57:23,871 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:57:23,872 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:23,872 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:23,875 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:23,875 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:23,877 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:23,879 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:23,882 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:23,882 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:23,884 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:23,886 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:57:23,887 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:57:23,888 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:57:23,890 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:23,891 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:57:23,893 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:57:23]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:58:37,602 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 08:58:37,603 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 08:58:37,604 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-bfd66eda-f396-496e-b2af-7821309b8b2e sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 08:58:37,604 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:58:37,604 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:58:37,604 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 08:58:37,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 08:58:37,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 08:58:37,928 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 08:58:37,929 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 08:58:37,929 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 08:58:37,929 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 08:58:37,938 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 08:58:37,940 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 08:58:38,083 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 08:58:38,088 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 08:58:41,029 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 7804 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 08:58:41,031 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 08:58:41,076 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 08:58:41,077 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 08:58:41,077 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 08:58:41,955 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 08:58:41,958 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 08:58:41,981 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-02 08:58:42,909 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 08:58:42,919 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 08:58:42,921 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 08:58:42,921 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 08:58:42,957 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 08:58:42,957 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1880 ms
2024-07-02 08:58:43,023 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 08:58:43,762 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 08:58:44,280 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 08:58:44,322 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 08:58:44,332 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 08:58:44,361 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 08:58:44,396 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:58:44,456 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:58:44,457 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:58:44,457 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719881924455
2024-07-02 08:58:44,460 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 08:58:44,471 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.96 seconds (process running for 5.154)
2024-07-02 08:58:44,732 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:58:44,733 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 08:58:44,737 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:58:44,746 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-c647c805-4e1e-4e08-a031-05c3e1438021
2024-07-02 08:58:44,746 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 08:58:44,749 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=41, memberId='consumer-community-consumer-group-1-c647c805-4e1e-4e08-a031-05c3e1438021', protocol='range'}
2024-07-02 08:58:44,754 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 41: {consumer-community-consumer-group-1-c647c805-4e1e-4e08-a031-05c3e1438021=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 08:58:44,759 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=41, memberId='consumer-community-consumer-group-1-c647c805-4e1e-4e08-a031-05c3e1438021', protocol='range'}
2024-07-02 08:58:44,759 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 08:58:44,761 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 08:58:44,767 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:58:44,767 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:58:44,767 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 08:58:44,775 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 08:58:47,256 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 08:58:47,256 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 08:58:47,257 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 08:58:47,285 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:47]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:47,609 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:47]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:47,623 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:47]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:47,635 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 08:58:47,886 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66003ed1
2024-07-02 08:58:47,887 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 08:58:48,053 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:48,055 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:48,059 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:48,074 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:48,077 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:48,078 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:48,080 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:48,082 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:48,085 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:48,086 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:48,088 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:48,090 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:48,092 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:48]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:58:49,094 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:49,095 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:49,096 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:49,100 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:49,101 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:49,103 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:49,105 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:49,107 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:49,108 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:49,110 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:49,112 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:49,115 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:49,116 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:49,118 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:49,119 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:49,121 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:58:51,150 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:51,151 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,157 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:51,159 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:58:51,163 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,164 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,165 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,166 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,167 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,167 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,168 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,169 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,169 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,170 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,868 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:51,869 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,871 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:51,873 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:58:51,875 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,876 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,877 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,878 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,879 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,881 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,882 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,883 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,885 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:51,886 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:51]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,633 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:52,634 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,636 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:52,638 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:58:52,641 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,643 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,644 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,645 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,647 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,648 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,649 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,649 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,650 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:52,651 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,082 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:53,083 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,084 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:53,085 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:58:53,088 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,089 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,090 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,090 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,091 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,092 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,093 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,094 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,094 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:53,095 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,050 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:54,051 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,053 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:58:54,057 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:58:54,063 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,066 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,068 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,069 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,072 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,074 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,076 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,079 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,081 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,082 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,084 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,086 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,088 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,089 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,091 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,092 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,094 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:58:54,822 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:54,823 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,824 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 08:58:54,826 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 08:58:54,829 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,831 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,832 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,833 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,834 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,835 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,836 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,837 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,839 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,839 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,841 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,843 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,843 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,845 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 08:58:54,846 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:54,847 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:54,848 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:54]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:58:55,634 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:55,635 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:55,636 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:55,639 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:55,641 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:55,643 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:55,644 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:55,647 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:55,647 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:55,649 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:55,651 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:55,653 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:55,654 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:55,656 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:55,659 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:55,660 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:55]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:58:56,231 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:56,232 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:56,233 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:56,237 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:56,238 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:56,241 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:56,242 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:56,245 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:56,246 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:56,248 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:56,250 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:58:56,252 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:56,253 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:56,255 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:56,257 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:58:56,259 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:58:57,433 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:57,433 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,435 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:57,437 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:58:57,440 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,441 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,442 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,443 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,443 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,444 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,444 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,445 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,445 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:57,446 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,101 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:58,102 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,103 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:58,105 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:58:58,108 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,109 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,110 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,111 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,111 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,112 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,112 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,113 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,113 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,114 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,760 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:58:58,761 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,762 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:58:58,765 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:58:58,768 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,769 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,770 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,771 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,771 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,772 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,773 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,774 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,774 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:58:58,775 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:58:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:01,859 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:01,860 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:01,861 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:01,864 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:01,865 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:01,868 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:01,870 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:01,873 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:01,874 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:01,875 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:01,877 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:01,880 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:01,881 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:01,882 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:01,884 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:01,886 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:59:10,198 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:10,200 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:10,213 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,216 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,218 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,220 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,222 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,223 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,225 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,228 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,229 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:10,231 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,316 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:11,316 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,319 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:59:11,321 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,322 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,323 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,331 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:11,334 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,335 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:11,337 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,337 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,338 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,339 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,339 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,339 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,340 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,340 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,340 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:11,343 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,343 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:11,345 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,345 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,346 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:11,347 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,348 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:11,349 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,350 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,350 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:11,351 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,353 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:11,354 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,354 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,355 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:11,356 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:11,356 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:11,358 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:11,358 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:11,359 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:11]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:13,930 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:13,931 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:13,932 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 08:59:13,934 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:13,935 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:13,936 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:13,937 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:13,939 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:13,940 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:13,942 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:13,942 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:13,943 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:13,944 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:13,945 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:13,946 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:13,947 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:13,947 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:13,948 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:13,949 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:13,953 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:13,954 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:13,955 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:13,957 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:13,958 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 08:59:13,959 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:13,960 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:13,960 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:13,961 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:13,961 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:13,962 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:13]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 08:59:27,822 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:27,824 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:27,827 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:27]访问了[com.yuanmh.community.service.LikeService.like]方法
2024-07-02 08:59:27,876 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:27]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 08:59:27,877 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:27]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 08:59:27,915 INFO [http-nio-8080-exec-7] o.a.k.c.p.ProducerConfig [AbstractConfig.java:370] ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-02 08:59:27,916 INFO [http-nio-8080-exec-7] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 08:59:27,923 INFO [http-nio-8080-exec-7] o.a.k.c.p.KafkaProducer [KafkaProducer.java:597] [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-07-02 08:59:27,938 INFO [http-nio-8080-exec-7] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 08:59:27,938 INFO [http-nio-8080-exec-7] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 08:59:27,938 INFO [http-nio-8080-exec-7] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719881967938
2024-07-02 08:59:27,943 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.Metadata [Metadata.java:349] [Producer clientId=producer-1] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 08:59:27,943 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.p.i.TransactionManager [TransactionManager.java:502] [Producer clientId=producer-1] ProducerId set to 3001 with epoch 0
2024-07-02 08:59:30,537 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:30,538 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:30,538 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:30,541 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:30,542 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:30,544 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:30,546 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:30,548 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:30,549 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:30,551 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:30,552 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:30,553 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:30,554 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:30,555 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:30,557 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:30,558 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:59:32,993 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:32]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:32,994 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:32]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:32,995 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:32,997 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:32]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:32,997 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:32,999 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,000 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:33,001 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:33,002 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:33,003 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,005 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:33,006 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:33,007 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:33,008 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,010 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,010 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:59:33,661 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:33,662 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:33,663 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:33,666 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:33,667 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:33,669 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,671 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:33,673 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:33,674 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:33,676 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,678 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:33,680 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:33,681 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:33,682 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,684 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:33,685 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:59:35,891 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:35,892 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:35,892 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:35,895 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:35,896 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:35,897 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:35,899 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:35,901 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:35,902 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:35,903 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:35,905 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:35,907 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:35,908 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:35,910 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:35,911 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:35,912 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:59:38,670 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:38,671 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,671 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:38,673 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:59:38,675 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,676 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,677 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,677 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,678 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,679 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,680 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:38,681 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:43,122 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:43,123 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:43,123 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:43,125 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:43,126 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:43,127 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:43,128 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:43,130 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:43,131 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:43,133 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:43,135 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:43,137 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:43,138 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:43,139 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:43,141 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:43,142 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:59:44,206 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:44,206 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:44,207 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:44,209 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:44,210 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:44,212 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:44,214 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:44,216 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:44,217 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:44,219 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:44,221 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:44,223 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:44,224 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:44,226 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:44,227 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:44,228 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 08:59:45,648 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:45,648 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,649 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:45,651 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:59:45,652 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,653 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,653 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,654 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,654 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.readMessage]方法
2024-07-02 08:59:45,869 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:45,870 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,871 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:45,874 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 08:59:45,876 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,877 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,878 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:45,880 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:45]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:49,194 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 08:59:49,195 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:49,196 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:49,198 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:49,199 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:49,200 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:49,201 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:49,203 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:49,203 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:49,204 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:49,206 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 08:59:49,208 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 08:59:49,209 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 08:59:49,210 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:49,212 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 08:59:49,213 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 08:59:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:01:14,169 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:01:14,170 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:14,171 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 09:01:14,173 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 09:01:14,175 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:14,176 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:01:14,177 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:14,178 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:14,179 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:14]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:01:15,726 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:01:15,727 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:15,728 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 09:01:15,730 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 09:01:15,732 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:15,734 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:01:15,734 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:15,735 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:15,736 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:15]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:01:16,377 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:01:16,378 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:16,379 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:01:16,381 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:16,381 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:01:16,383 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:16,384 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:01:16,386 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:16,386 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:01:16,388 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:16,389 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:01:16,390 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:16,391 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:01:16,393 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:16,394 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:16,396 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:01:18,794 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:01:18,795 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:18,795 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 09:01:18,798 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 09:01:18,801 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:18,803 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:01:18,804 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:18,804 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:18,806 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:01:18,807 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:18,808 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:18,809 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:01:18,810 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:18,811 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:18,812 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:01:18,813 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:18,813 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:18,815 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:01:18,815 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:18,816 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:18,817 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:01:19,956 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:01:19,957 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:19,957 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:01:19,960 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:19,960 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:01:19,962 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:19,964 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:01:19,966 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:19,967 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:01:19,969 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:19,970 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:01:19,972 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:01:19,973 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:01:19,975 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:19,976 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:01:19,977 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:01:19]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:03:23,329 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 09:03:23,331 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 09:03:23,331 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-c647c805-4e1e-4e08-a031-05c3e1438021 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 09:03:23,331 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 09:03:23,331 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 09:03:23,331 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 09:03:23,332 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 09:03:23,332 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 09:03:23,693 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 09:03:23,693 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 09:03:23,694 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 09:03:23,694 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 09:03:23,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 09:03:23,701 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 09:03:23,836 INFO [SpringApplicationShutdownHook] o.a.k.c.p.KafkaProducer [KafkaProducer.java:1346] [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-07-02 09:03:23,841 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 09:03:23,841 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 09:03:23,841 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 09:03:23,841 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 09:03:23,842 INFO [SpringApplicationShutdownHook] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.producer for producer-1 unregistered
2024-07-02 09:03:23,846 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 09:03:23,851 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 09:03:27,904 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 17464 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 09:03:27,905 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 09:03:27,940 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 09:03:27,940 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 09:03:27,940 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 09:03:28,511 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 09:03:28,514 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 09:03:28,534 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-02 09:03:29,230 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 09:03:29,239 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 09:03:29,240 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 09:03:29,241 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 09:03:29,279 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 09:03:29,280 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1340 ms
2024-07-02 09:03:29,337 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 09:03:30,068 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 09:03:30,600 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 09:03:30,650 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 09:03:30,660 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 09:03:30,691 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 09:03:30,728 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 09:03:30,792 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 09:03:30,793 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 09:03:30,793 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719882210791
2024-07-02 09:03:30,796 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 09:03:30,809 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.383 seconds (process running for 4.059)
2024-07-02 09:03:31,080 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 09:03:31,081 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 09:03:31,085 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 09:03:31,094 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-68ce3c73-d5ce-4f8b-851d-3d3b7a0ea19c
2024-07-02 09:03:31,095 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 09:03:31,098 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=43, memberId='consumer-community-consumer-group-1-68ce3c73-d5ce-4f8b-851d-3d3b7a0ea19c', protocol='range'}
2024-07-02 09:03:31,103 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 43: {consumer-community-consumer-group-1-68ce3c73-d5ce-4f8b-851d-3d3b7a0ea19c=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 09:03:31,107 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=43, memberId='consumer-community-consumer-group-1-68ce3c73-d5ce-4f8b-851d-3d3b7a0ea19c', protocol='range'}
2024-07-02 09:03:31,108 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 09:03:31,110 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 09:03:31,116 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 09:03:31,116 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 09:03:31,116 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 09:03:31,124 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 09:03:37,473 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 09:03:37,474 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 09:03:37,475 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 09:03:37,503 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:37,831 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:03:37,856 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.logout]方法
2024-07-02 09:03:37,892 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:38,200 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:54,572 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:54,584 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.login]方法
2024-07-02 09:03:54,598 INFO [http-nio-8080-exec-5] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 09:03:54,862 INFO [http-nio-8080-exec-5] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@28520eb4
2024-07-02 09:03:54,864 INFO [http-nio-8080-exec-5] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 09:03:54,928 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:54,929 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:54]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:03:54,963 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:54]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:03:56,662 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:56,663 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:03:56,665 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 09:03:56,669 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 09:03:56,672 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:03:56,676 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:56]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:03:57,771 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:57,772 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:57]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:03:57,780 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:57]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:03:58,538 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:58,540 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:03:58,542 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 09:03:58,545 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 09:03:58,548 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:03:58,549 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:03:59,498 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:59,499 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:03:59,501 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:03:59,506 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:03:59,508 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:03:59,510 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:03:59,512 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:03:59,529 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:03:59,530 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:03:59]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:00,982 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:00,983 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:00]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:00,991 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:00]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:05,039 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:05,040 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:05,042 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.logout]方法
2024-07-02 09:04:05,049 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:05,101 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:14,415 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:14,417 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.login]方法
2024-07-02 09:04:14,427 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:14,428 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:14,436 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,438 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,440 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,442 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,445 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,447 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,449 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,451 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,453 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:14,456 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:14]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 09:04:16,628 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:16,630 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:16,631 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 09:04:16,635 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 09:04:16,638 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:16,641 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:04:16,642 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:16,643 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:16,645 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:04:16,646 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:16,647 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:16,649 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:04:16,651 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:16,652 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:16,654 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:04:16,655 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:16,656 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:16,658 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 09:04:16,659 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:16,660 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:16,661 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:16]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:04:17,848 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 09:04:17,849 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:17,850 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:04:17,964 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:17,965 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:04:17,967 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:17,968 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:04:17,970 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:17,971 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:04:17,974 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:17,975 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 09:04:17,977 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 09:04:17,978 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 09:04:17,980 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:17,982 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 09:04:17,983 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 09:04:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 09:07:33,008 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node -1 disconnected.
2024-07-02 09:07:33,011 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:33,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:353] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cancelled in-flight FETCH request with correlation id 644 due to node 0 being disconnected (elapsed time since creation: 32ms, elapsed time since send: 32ms, request timeout: 30000ms)
2024-07-02 09:07:33,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:353] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cancelled in-flight METADATA request with correlation id 645 due to node 0 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2024-07-02 09:07:33,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 2147483647 disconnected.
2024-07-02 09:07:33,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.FetchSessionHandler [FetchSessionHandler.java:615] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Error sending fetch request (sessionId=621462240, epoch=473) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-02 09:07:33,013 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:999] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2024-07-02 09:07:35,164 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:37,401 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:37,401 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.FetchSessionHandler [FetchSessionHandler.java:615] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Error sending fetch request (sessionId=621462240, epoch=INITIAL) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-02 09:07:39,865 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:42,540 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:42,540 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.FetchSessionHandler [FetchSessionHandler.java:615] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Error sending fetch request (sessionId=621462240, epoch=INITIAL) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-02 09:07:45,494 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:48,446 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:51,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:51,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.FetchSessionHandler [FetchSessionHandler.java:615] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Error sending fetch request (sessionId=621462240, epoch=INITIAL) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-02 09:07:54,516 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node 0 disconnected.
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 09:07:54,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 09:07:55,115 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 09:07:55,115 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 13:10:20,293 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 21068 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 13:10:20,295 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 13:10:20,333 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 13:10:20,333 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 13:10:20,334 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 13:10:21,298 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 13:10:21,301 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 13:10:21,325 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-02 13:10:22,103 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 13:10:22,113 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 13:10:22,115 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 13:10:22,115 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 13:10:22,154 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 13:10:22,154 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1820 ms
2024-07-02 13:10:22,221 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 13:10:23,152 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 13:10:23,730 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 13:10:23,777 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 13:10:23,789 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 13:10:23,825 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 13:10:23,873 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:10:23,966 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:10:23,968 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:10:23,968 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719897023964
2024-07-02 13:10:23,972 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 13:10:23,987 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 4.174 seconds (process running for 5.017)
2024-07-02 13:10:24,382 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:10:24,383 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 13:10:24,388 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:10:24,403 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-6ca6f7b8-6ec0-4c2f-aa2b-4c974b6cbf42
2024-07-02 13:10:24,403 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:10:24,413 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=45, memberId='consumer-community-consumer-group-1-6ca6f7b8-6ec0-4c2f-aa2b-4c974b6cbf42', protocol='range'}
2024-07-02 13:10:24,418 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 45: {consumer-community-consumer-group-1-6ca6f7b8-6ec0-4c2f-aa2b-4c974b6cbf42=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 13:10:24,431 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=45, memberId='consumer-community-consumer-group-1-6ca6f7b8-6ec0-4c2f-aa2b-4c974b6cbf42', protocol='range'}
2024-07-02 13:10:24,432 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 13:10:24,434 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 13:10:24,443 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:10:24,443 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:10:24,443 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:10:24,463 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 13:10:36,708 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 13:10:36,708 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 13:10:36,710 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 13:10:36,740 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:37,107 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:37]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:37,122 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 13:10:37,453 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@537e8bf7
2024-07-02 13:10:37,454 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 13:10:37,571 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:37,575 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:37,578 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:37,581 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:37,583 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:37]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:40,727 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:40,729 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:40,732 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:10:40,736 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:10:40,740 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:40,744 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:10:40,746 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:40,747 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:40,749 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:10:41,793 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:41,795 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:41,796 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:10:41,931 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:41,935 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:10:41,936 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:41,938 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:10:41,940 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:41,941 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:10:41,943 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:41,945 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:10:41,947 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:41,948 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:10:41,950 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:41,951 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:41,952 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:10:43,702 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:43,702 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:43,704 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:10:43,707 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNotices]方法
2024-07-02 13:10:43,713 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:43,716 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:43,721 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:43,723 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:43,724 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:43,725 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,597 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:46,599 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,615 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.DiscussPostsServiceImpl.findDiscussPostById]方法
2024-07-02 13:10:46,628 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,631 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,656 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,663 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 13:10:46,687 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,689 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 13:10:46,692 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,693 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,694 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,695 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,696 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,697 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,698 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,699 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,700 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,700 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 13:10:46,703 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,704 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 13:10:46,707 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,708 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,709 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 13:10:46,711 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,712 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 13:10:46,713 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,714 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,715 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 13:10:46,717 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,718 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 13:10:46,720 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,721 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,722 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,722 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,723 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,724 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,727 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,727 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,728 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,728 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,729 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,729 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,730 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 13:10:46,738 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:46,739 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentsByEntity]方法
2024-07-02 13:10:46,742 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:10:46,743 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.LikeService.findEntityLikeStatus]方法
2024-07-02 13:10:46,743 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:46]访问了[com.yuanmh.community.service.impl.CommentServiceImpl.findCommentCount]方法
2024-07-02 13:10:49,168 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:49,169 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:49,170 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:10:49,174 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:10:49,178 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:49,180 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:10:49,181 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:49,182 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:49,183 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:10:49,185 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:49,187 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:49,189 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:10:49,190 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:49,193 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:49,194 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:10:49,195 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:49,196 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:49,197 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:10:49,198 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:49,201 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:49,203 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:49]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:10:50,535 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:50,537 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:50,539 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:10:50,541 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLetters]方法
2024-07-02 13:10:50,546 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:50,546 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:50,547 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:50,548 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:50,548 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:50,549 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:50]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:52,884 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:52,885 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:52,887 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:52,887 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:52]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:10:52,895 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:52]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:10:52,896 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:52]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:10:52,897 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:52]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:10:55,979 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:55,980 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:55]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:55,982 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:55]访问了[com.yuanmh.community.service.FollowService.unfollow]方法
2024-07-02 13:10:56,048 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:56,049 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:56,050 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:56,051 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:10:56,052 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:10:56,053 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:10:56,054 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:10:56,561 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:56,562 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:56,563 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.FollowService.follow]方法
2024-07-02 13:10:56,599 INFO [http-nio-8080-exec-2] o.a.k.c.p.ProducerConfig [AbstractConfig.java:370] ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-02 13:10:56,600 INFO [http-nio-8080-exec-2] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:10:56,606 INFO [http-nio-8080-exec-2] o.a.k.c.p.KafkaProducer [KafkaProducer.java:597] [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-07-02 13:10:56,618 INFO [http-nio-8080-exec-2] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:10:56,619 INFO [http-nio-8080-exec-2] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:10:56,619 INFO [http-nio-8080-exec-2] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719897056618
2024-07-02 13:10:56,624 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.Metadata [Metadata.java:349] [Producer clientId=producer-1] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:10:56,645 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:56,646 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:56,647 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:56,648 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:10:56,649 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:10:56,650 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:10:56,652 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:56]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:10:56,744 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.p.i.TransactionManager [TransactionManager.java:502] [Producer clientId=producer-1] ProducerId set to 4000 with epoch 0
2024-07-02 13:10:58,637 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:10:58,638 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:58,639 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:10:58,641 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:58,642 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:10:58,644 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:58,645 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:10:58,647 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:58,648 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:10:58,650 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:58,651 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:10:58,653 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:10:58,654 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:10:58,655 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:58,657 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:10:58,658 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:10:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:11:01,137 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:11:01,138 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:01,139 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:11:01,141 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:11:01,144 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:01,145 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:11:01,147 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:01,148 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:01,149 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:01]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:11:02,610 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:11:02,611 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:02,612 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:11:02,615 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:11:02,616 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:02,617 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:11:02,618 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:02,619 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:02,621 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:02]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:11:03,384 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:11:03,385 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:03,387 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:11:03,390 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:03,390 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:11:03,392 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:03,393 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:11:03,395 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:03,395 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:11:03,397 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:03,398 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:11:03,400 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:03,401 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:11:03,402 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:03,403 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:03,405 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:03]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:11:04,088 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:11:04,089 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:04]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:04,095 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:04]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:11:04,097 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:04]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:11:04,099 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:04]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:11:04,100 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:04]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:11:04,102 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:04]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:11:05,087 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:11:05,088 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:05,090 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:11:05,092 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:11:05,094 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:05,095 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:11:05,096 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:11:05,097 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:11:05,099 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:11:05]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:19:24,413 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Node -1 disconnected.
2024-07-02 13:19:56,718 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.NetworkClient [NetworkClient.java:997] [Producer clientId=producer-1] Node -1 disconnected.
2024-07-02 13:22:49,875 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 13:22:49,875 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 13:22:49,876 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-6ca6f7b8-6ec0-4c2f-aa2b-4c974b6cbf42 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 13:22:49,876 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:22:49,876 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:22:49,876 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 13:22:49,877 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:22:49,877 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:22:50,188 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:22:50,189 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:22:50,189 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:22:50,189 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:22:50,192 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 13:22:50,193 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 13:22:50,361 INFO [SpringApplicationShutdownHook] o.a.k.c.p.KafkaProducer [KafkaProducer.java:1346] [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-07-02 13:22:50,370 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:22:50,370 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:22:50,370 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:22:50,370 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:22:50,371 INFO [SpringApplicationShutdownHook] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.producer for producer-1 unregistered
2024-07-02 13:22:50,378 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 13:22:50,384 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 13:22:55,966 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 19768 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 13:22:55,967 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 13:22:56,000 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 13:22:56,000 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 13:22:56,001 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 13:22:56,596 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 13:22:56,599 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 13:22:56,620 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-02 13:22:57,302 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 13:22:57,310 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 13:22:57,312 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 13:22:57,312 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 13:22:57,348 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 13:22:57,349 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1348 ms
2024-07-02 13:22:57,409 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 13:22:58,140 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 13:22:58,680 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 13:22:58,724 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 13:22:58,734 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 13:22:58,763 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 13:22:58,798 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:22:58,860 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:22:58,861 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:22:58,861 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719897778859
2024-07-02 13:22:58,864 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 13:22:58,881 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.424 seconds (process running for 4.084)
2024-07-02 13:22:59,148 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:22:59,148 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 13:22:59,152 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:22:59,162 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-b8f4de42-e51f-4019-aae0-585505d69547
2024-07-02 13:22:59,162 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:22:59,166 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=47, memberId='consumer-community-consumer-group-1-b8f4de42-e51f-4019-aae0-585505d69547', protocol='range'}
2024-07-02 13:22:59,171 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 47: {consumer-community-consumer-group-1-b8f4de42-e51f-4019-aae0-585505d69547=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 13:22:59,176 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=47, memberId='consumer-community-consumer-group-1-b8f4de42-e51f-4019-aae0-585505d69547', protocol='range'}
2024-07-02 13:22:59,176 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 13:22:59,178 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 13:22:59,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:22:59,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:22:59,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:22:59,193 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 13:23:09,137 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 13:23:09,138 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 13:23:09,139 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 13:23:09,171 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:23:09,512 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:09,533 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:23:09,544 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 13:23:09,817 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6257ae48
2024-07-02 13:23:09,819 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 13:23:09,872 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:23:09,878 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:09,894 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:23:09,896 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:09,898 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:09,899 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:23:09,904 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:09,906 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:09]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:23:12,513 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:23:12,514 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:12,515 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:23:12,517 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:23:12,519 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:12,520 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:23:12,522 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:12,523 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:12,525 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:23:12,527 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:12,529 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:23:43,389 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 13:23:43,390 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 13:23:43,390 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-b8f4de42-e51f-4019-aae0-585505d69547 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 13:23:43,390 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:23:43,391 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:23:43,391 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 13:23:43,392 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:23:43,392 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:23:43,873 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:23:43,873 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:23:43,873 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:23:43,873 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:23:43,879 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 13:23:43,881 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 13:23:44,065 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 13:23:44,078 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 13:23:47,933 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 3996 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 13:23:47,935 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 13:23:47,987 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 13:23:47,987 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 13:23:47,987 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 13:23:48,907 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 13:23:48,911 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 13:23:48,938 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-02 13:23:49,666 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 13:23:49,675 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 13:23:49,677 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 13:23:49,677 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 13:23:49,711 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 13:23:49,711 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1723 ms
2024-07-02 13:23:49,775 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 13:23:50,509 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 13:23:51,063 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 13:23:51,108 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 13:23:51,118 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 13:23:51,149 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 13:23:51,185 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:23:51,248 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:23:51,249 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:23:51,249 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719897831247
2024-07-02 13:23:51,252 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 13:23:51,263 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.95 seconds (process running for 5.57)
2024-07-02 13:23:51,566 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:23:51,567 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 13:23:51,571 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:23:51,584 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-1bb481df-b164-431f-9b1f-e3a7fee251c4
2024-07-02 13:23:51,585 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:23:51,591 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=49, memberId='consumer-community-consumer-group-1-1bb481df-b164-431f-9b1f-e3a7fee251c4', protocol='range'}
2024-07-02 13:23:51,597 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 49: {consumer-community-consumer-group-1-1bb481df-b164-431f-9b1f-e3a7fee251c4=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 13:23:51,602 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=49, memberId='consumer-community-consumer-group-1-1bb481df-b164-431f-9b1f-e3a7fee251c4', protocol='range'}
2024-07-02 13:23:51,603 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 13:23:51,606 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 13:23:51,613 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:23:51,613 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:23:51,614 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:23:51,623 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 13:23:52,442 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 13:23:52,442 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 13:23:52,444 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 13:23:52,496 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:23:52,916 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:52]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:52,943 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:52]访问了[com.yuanmh.community.service.FollowService.unfollow]方法
2024-07-02 13:23:53,166 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:23:53,167 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:53,172 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:53,175 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:23:53,187 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:23:53,190 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:23:53,191 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:23:53,197 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:53,234 INFO [http-nio-8080-exec-2] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 13:23:53,623 INFO [http-nio-8080-exec-2] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@772b4e9f
2024-07-02 13:23:53,625 INFO [http-nio-8080-exec-2] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 13:23:53,696 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:23:53,938 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:23:53,939 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:53,945 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:53,947 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:53]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:23:58,049 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:23:58,051 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:58,053 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:58,055 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:23:58,056 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:23:58,057 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:23:58,058 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:23:58,059 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:58,062 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:23:58,069 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:23:58,070 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:23:58,073 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:23:58,075 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:23:58]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:24:05,804 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 13:24:05,804 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 13:24:05,804 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-1bb481df-b164-431f-9b1f-e3a7fee251c4 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 13:24:05,805 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:24:05,805 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:24:05,805 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 13:24:05,806 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:24:05,806 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:24:05,847 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:24:05,847 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:24:05,848 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:24:05,848 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:24:05,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 13:24:05,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 13:24:05,978 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 13:24:05,982 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 13:24:08,852 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 12804 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 13:24:08,855 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 13:24:08,915 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 13:24:08,917 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 13:24:08,917 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 13:24:10,041 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 13:24:10,044 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 13:24:10,100 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 28 ms. Found 0 Redis repository interfaces.
2024-07-02 13:24:10,906 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 13:24:10,915 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 13:24:10,916 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 13:24:10,916 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 13:24:10,958 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 13:24:10,958 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 2041 ms
2024-07-02 13:24:11,025 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 13:24:11,751 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 13:24:12,280 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 13:24:12,323 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 13:24:12,333 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 13:24:12,362 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 13:24:12,397 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:24:12,460 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:24:12,461 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:24:12,461 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719897852459
2024-07-02 13:24:12,464 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 13:24:12,477 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 4.512 seconds (process running for 5.324)
2024-07-02 13:24:12,749 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:24:12,750 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 13:24:12,755 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:24:12,764 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-9d2ec187-ddd7-4aba-83f4-cc0059d67125
2024-07-02 13:24:12,764 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:24:12,767 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=51, memberId='consumer-community-consumer-group-1-9d2ec187-ddd7-4aba-83f4-cc0059d67125', protocol='range'}
2024-07-02 13:24:12,772 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 51: {consumer-community-consumer-group-1-9d2ec187-ddd7-4aba-83f4-cc0059d67125=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 13:24:12,777 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=51, memberId='consumer-community-consumer-group-1-9d2ec187-ddd7-4aba-83f4-cc0059d67125', protocol='range'}
2024-07-02 13:24:12,778 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 13:24:12,780 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 13:24:12,786 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:24:12,786 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:24:12,786 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:24:12,794 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 13:24:17,186 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 13:24:17,186 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 13:24:17,188 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 13:24:17,216 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:24:17,542 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:24:17,564 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:24:17,576 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 13:24:17,832 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e2395be
2024-07-02 13:24:17,833 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 13:24:17,885 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:24:17,891 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:17,907 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:24:17,909 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:24:17,910 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:17,912 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:24:17,916 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:17,918 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:17]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:24:18,150 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:24:18,151 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:18]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:24:18,165 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:18,167 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:18]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:24:25,305 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:24:25,307 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:24:25,309 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:24:25,313 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:24:25,316 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:25,319 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:24:25,321 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:24:25,322 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:25,324 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:24:25,326 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:25,328 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:24:25,335 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:24:25,336 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:24:25,339 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:24:25,341 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:24:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:24:57,749 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 13:24:57,750 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 13:24:57,750 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-9d2ec187-ddd7-4aba-83f4-cc0059d67125 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 13:24:57,751 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:24:57,751 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:24:57,751 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 13:24:57,752 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:24:57,752 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:24:57,761 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:24:57,761 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:24:57,762 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:24:57,762 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:24:57,769 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 13:24:57,769 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 13:24:57,902 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 13:24:57,908 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 13:25:02,191 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 20540 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 13:25:02,194 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 13:25:02,300 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 13:25:02,300 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 13:25:02,300 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 13:25:03,758 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 13:25:03,760 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 13:25:03,781 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-02 13:25:04,472 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 13:25:04,480 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 13:25:04,481 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 13:25:04,481 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 13:25:04,516 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 13:25:04,516 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 2215 ms
2024-07-02 13:25:04,577 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 13:25:05,299 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 13:25:05,814 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 13:25:05,857 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 13:25:05,868 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 13:25:05,897 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 13:25:05,932 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:25:06,001 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:25:06,002 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:25:06,002 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719897905999
2024-07-02 13:25:06,005 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 13:25:06,016 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 4.775 seconds (process running for 5.429)
2024-07-02 13:25:06,280 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:25:06,280 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 13:25:06,284 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:25:06,294 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-4616f343-4e82-437a-85de-d95614ecd3c7
2024-07-02 13:25:06,294 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:25:06,297 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=53, memberId='consumer-community-consumer-group-1-4616f343-4e82-437a-85de-d95614ecd3c7', protocol='range'}
2024-07-02 13:25:06,303 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 53: {consumer-community-consumer-group-1-4616f343-4e82-437a-85de-d95614ecd3c7=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 13:25:06,308 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=53, memberId='consumer-community-consumer-group-1-4616f343-4e82-437a-85de-d95614ecd3c7', protocol='range'}
2024-07-02 13:25:06,308 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 13:25:06,310 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 13:25:06,316 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:25:06,316 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:25:06,316 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:25:06,324 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 13:25:10,013 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 13:25:10,013 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 13:25:10,015 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 13:25:10,043 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:10,376 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:10,399 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:10,411 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 13:25:10,670 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6fbbeb4f
2024-07-02 13:25:10,672 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 13:25:10,724 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:10,730 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:10,746 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:10,748 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:10,749 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:10,752 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:10,756 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:10,758 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:12,836 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:12,837 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:12,838 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:12,949 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:12,950 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:12,952 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:12,953 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:12,956 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:12,957 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:12,959 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:12,961 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:12,964 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:12,965 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:12,966 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:12,968 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:12,970 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:12,972 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:12,974 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:22,596 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:22,598 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:22,599 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:22,602 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:22,603 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:22,605 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:22,607 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:22,609 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:22,610 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:22,612 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:22,614 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:22,616 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:22,617 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:22,618 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:22,621 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:22,623 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:22,624 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:22,626 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:22]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:24,139 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:24,140 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:24,141 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:24,144 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:24,145 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:24,146 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:24,148 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:24,149 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:24,150 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:24,152 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:24,154 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:24,157 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:24,158 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:24,159 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:24,161 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:24,162 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:24,163 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:24,165 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:24]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:25,074 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:25,076 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:25,077 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:25,079 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:25,080 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:25,082 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:25,084 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:25,086 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:25,087 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:25,088 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:25,090 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:25,092 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:25,093 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:25,094 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:25,095 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:25,096 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:25,098 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:25,099 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:26,135 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:26,136 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:26,138 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:26,140 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:26,142 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:26,144 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:26,145 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:26,146 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:26,148 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:26,150 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:26,152 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:26,877 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:26,878 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:26,890 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:25:26,894 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:25:26,896 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:25:26,898 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:25:26,901 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:25:26,901 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:26,903 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:26]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:28,064 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:28,065 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:28,067 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:28,069 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:28,071 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:28,073 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:28,074 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:28,075 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:28,076 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:28,078 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:28,079 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:28,976 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:28,978 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:28,979 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:28,982 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:28,983 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:28,984 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:28,985 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:28,987 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:28,988 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:28,990 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:28,991 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:28,993 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:28,994 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:28,995 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:28,997 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:28,999 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:28]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:29,000 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:29,001 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:31,669 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:31,670 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:31,671 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:31,673 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:31,674 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:31,676 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:31,677 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:31,678 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:31,680 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:31,681 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:31,682 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:31]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:34,451 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:34,452 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:34,453 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:34,454 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:25:34,461 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:25:34,462 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:25:34,463 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:25:34,471 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:34,473 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:35,559 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:35,560 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:35,563 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.FollowService.follow]方法
2024-07-02 13:25:35,635 INFO [http-nio-8080-exec-7] o.a.k.c.p.ProducerConfig [AbstractConfig.java:370] ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-02 13:25:35,636 INFO [http-nio-8080-exec-7] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:25:35,642 INFO [http-nio-8080-exec-7] o.a.k.c.p.KafkaProducer [KafkaProducer.java:597] [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-07-02 13:25:35,654 INFO [http-nio-8080-exec-7] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:25:35,654 INFO [http-nio-8080-exec-7] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:25:35,654 INFO [http-nio-8080-exec-7] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719897935653
2024-07-02 13:25:35,659 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.Metadata [Metadata.java:349] [Producer clientId=producer-1] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:25:35,659 INFO [kafka-producer-network-thread | producer-1] o.a.k.c.p.i.TransactionManager [TransactionManager.java:502] [Producer clientId=producer-1] ProducerId set to 4001 with epoch 0
2024-07-02 13:25:35,682 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:35,683 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:35,685 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:35,686 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:25:35,687 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:25:35,688 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:25:35,689 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:25:35,690 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:35,693 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:35]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:36,430 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:36,431 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:36,432 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.FollowService.unfollow]方法
2024-07-02 13:25:36,447 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:36,448 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:36,448 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:36,449 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:25:36,450 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:25:36,451 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:25:36,451 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:25:36,452 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:36,454 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:38,976 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:38,977 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:38,979 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:38,982 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:38,983 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:38,985 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:38,986 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:38,986 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:38,988 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:38,989 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:38,990 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:38]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:39,743 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:39,744 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:39,745 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:39,747 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:39,749 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:39,750 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:39,752 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:39,753 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:39,755 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:39,757 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:39,759 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:39]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:40,462 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:40,464 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:40,465 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:40,467 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:40,468 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:40,470 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:40,471 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:40,473 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:40,474 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:40,475 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:40,476 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:40,478 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:40,479 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:40,480 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:40,482 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:40,483 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:40,485 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:40,486 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:42,354 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:42,356 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:42,357 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:42,359 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:42,360 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:42,362 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:42,363 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:42,364 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:42,365 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:42,366 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:42,368 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:43,500 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:43,501 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:43,502 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:25:43,504 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:25:43,506 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:43,507 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:25:43,508 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:43,509 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:43,510 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:43,511 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:43,513 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:43]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:44,256 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:25:44,257 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:44,258 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:44,260 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:44,261 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:44,263 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:44,264 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:44,266 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:44,267 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:44,268 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:44,269 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:25:44,271 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:25:44,272 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:25:44,273 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:44,274 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:44,276 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:25:44,277 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:25:44,278 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:25:44]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:27:39,183 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 13:27:39,183 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 13:27:39,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-4616f343-4e82-437a-85de-d95614ecd3c7 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 13:27:39,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:27:39,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:27:39,184 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 13:27:39,185 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:27:39,185 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:27:39,271 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:27:39,271 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:27:39,271 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:27:39,271 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:27:39,275 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 13:27:39,276 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 13:27:39,393 INFO [SpringApplicationShutdownHook] o.a.k.c.p.KafkaProducer [KafkaProducer.java:1346] [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-07-02 13:27:39,397 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:27:39,397 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:27:39,397 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:27:39,397 INFO [SpringApplicationShutdownHook] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:27:39,398 INFO [SpringApplicationShutdownHook] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.producer for producer-1 unregistered
2024-07-02 13:27:39,401 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 13:27:39,405 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 13:27:42,602 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 8608 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 13:27:42,606 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 13:27:42,727 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 13:27:42,728 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 13:27:42,728 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 13:27:43,657 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 13:27:43,662 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 13:27:43,692 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2024-07-02 13:27:44,615 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 13:27:44,625 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 13:27:44,629 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 13:27:44,629 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 13:27:44,682 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 13:27:44,683 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1954 ms
2024-07-02 13:27:44,751 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 13:27:45,491 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 13:27:46,028 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 13:27:46,073 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 13:27:46,084 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 13:27:46,113 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 13:27:46,149 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:27:46,210 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:27:46,211 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:27:46,212 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719898066209
2024-07-02 13:27:46,214 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 13:27:46,226 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 4.193 seconds (process running for 5.791)
2024-07-02 13:27:46,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:27:46,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 13:27:46,513 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:27:46,523 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-9f64d3c8-e9ab-49d3-84b4-0b4bdcad49c6
2024-07-02 13:27:46,524 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:27:46,530 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=55, memberId='consumer-community-consumer-group-1-9f64d3c8-e9ab-49d3-84b4-0b4bdcad49c6', protocol='range'}
2024-07-02 13:27:46,536 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 55: {consumer-community-consumer-group-1-9f64d3c8-e9ab-49d3-84b4-0b4bdcad49c6=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 13:27:46,542 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=55, memberId='consumer-community-consumer-group-1-9f64d3c8-e9ab-49d3-84b4-0b4bdcad49c6', protocol='range'}
2024-07-02 13:27:46,542 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 13:27:46,545 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 13:27:46,551 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:27:46,552 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:27:46,552 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:27:46,561 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 13:28:07,321 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 13:28:07,322 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 13:28:07,323 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 13:28:07,351 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:07,680 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:07]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:07,696 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:07]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:07,708 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 13:28:07,972 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22a70490
2024-07-02 13:28:07,974 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 13:28:08,151 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:08,153 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:08,158 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:08,174 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:08,177 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:08,178 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:08,180 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:08,183 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:08,187 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:08,188 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:08,190 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:08,192 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:08,194 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:08,198 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:08,200 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:08]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:10,266 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:10,268 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:10,282 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:28:10,285 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:28:10,288 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:28:10,290 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:28:10,293 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.LikeService.findEntityLikeCount]方法
2024-07-02 13:28:10,294 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:10,296 INFO [http-nio-8080-exec-6] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:10]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:11,272 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:11,273 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:11,275 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:28:11,278 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:28:11,282 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:11,284 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:11,285 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:11,286 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:11,288 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:11,290 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:11,291 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:11]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:12,754 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:12,755 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:12,757 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:12,759 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:12,760 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:12,762 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:12,764 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:12,766 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:12,767 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:12,769 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:12,770 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:12,772 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:12,773 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:12,775 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:12,776 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:12,778 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:12,780 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:12,781 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:12]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:13,420 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:13,421 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:13,422 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:28:13,425 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:28:13,428 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:13,429 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:13,431 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:13,432 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:13,435 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:13,437 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:13,438 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:13]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:21,673 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:21,674 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:21,676 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:28:21,679 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:28:21,682 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:21,683 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:21,685 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:21,686 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:21,688 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:21,690 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:21,691 INFO [http-nio-8080-exec-10] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:21]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:25,724 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:25,725 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:25,727 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:25,728 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.LikeService.findUserLikeCount]方法
2024-07-02 13:28:25,734 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.FollowService.findFolloweeCount]方法
2024-07-02 13:28:25,736 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.FollowService.findFollowerCount]方法
2024-07-02 13:28:25,737 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.FollowService.isFollowed]方法
2024-07-02 13:28:25,744 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:25,746 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:25]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:27,908 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:27,909 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:27,910 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:28:27,913 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:28:27,917 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:27,919 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:27,920 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:27,921 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:27,923 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:27,924 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:27,925 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:27,926 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:27,927 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:27,928 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:27,930 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:27,931 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:27,932 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:27,934 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:27,935 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:27,936 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:27,938 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:27,939 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:27,940 INFO [http-nio-8080-exec-3] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:27]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,127 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:29,128 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,129 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:29,133 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,134 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,137 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,139 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:29,140 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,154 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,156 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,157 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:29,159 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,160 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,163 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,165 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,166 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:29,167 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,169 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,976 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:29,977 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,978 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:29,981 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,982 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,983 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,985 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:29,987 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,987 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,989 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,991 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:28:29,992 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:29,993 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:29,995 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,997 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:29,998 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:29,999 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:30,000 INFO [http-nio-8080-exec-2] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:34,051 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:34,052 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:34,053 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:28:34,054 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:28:34,056 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:34,059 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:34,060 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:34,062 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:34,064 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:34,066 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:34,067 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:34]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:36,464 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:28:36,466 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:36,467 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:28:36,470 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:28:36,474 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:36,476 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:28:36,477 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:28:36,478 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:36,480 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:28:36,481 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:28:36,482 INFO [http-nio-8080-exec-5] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:28:36]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:28:40,287 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 13:28:40,287 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 13:28:40,287 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-9f64d3c8-e9ab-49d3-84b4-0b4bdcad49c6 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 13:28:40,288 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:28:40,288 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:28:40,288 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 13:28:40,289 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:28:40,289 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:28:40,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:28:40,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:28:40,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:28:40,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:28:40,610 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 13:28:40,611 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 13:28:40,828 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 13:28:40,842 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
2024-07-02 13:29:20,635 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:50] Starting CommunityApplication using Java 21.0.3 with PID 18496 (F:\IDEAProject\Yuanmh0919\nowcoder\community\target\classes started by 袁明海 in F:\IDEAProject\Yuanmh0919\nowcoder)
2024-07-02 13:29:20,637 INFO [restartedMain] c.y.c.CommunityApplication [SpringApplication.java:654] No active profile set, falling back to 1 default profile: "default"
2024-07-02 13:29:20,680 INFO [restartedMain] o.s.b.d.r.ChangeableUrls [DeferredLog.java:252] The Class-Path manifest attribute in F:\JavaDev\Maven\repository\org\apache\kafka\kafka-clients\3.7.0\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/zstd-jni-1.5.5-6.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/lz4-java-1.8.0.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/snappy-java-1.1.10.5.jar,file:/F:/JavaDev/Maven/repository/org/apache/kafka/kafka-clients/3.7.0/slf4j-api-1.7.36.jar
2024-07-02 13:29:20,682 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-02 13:29:20,683 INFO [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor [DeferredLog.java:252] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-02 13:29:21,264 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:295] Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-02 13:29:21,266 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:143] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-02 13:29:21,286 INFO [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:211] Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-02 13:29:21,981 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:111] Tomcat initialized with port 8080 (http)
2024-07-02 13:29:21,992 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Initializing ProtocolHandler ["http-nio-8080"]
2024-07-02 13:29:21,994 INFO [restartedMain] o.a.c.c.StandardService [DirectJDKLog.java:173] Starting service [Tomcat]
2024-07-02 13:29:21,994 INFO [restartedMain] o.a.c.c.StandardEngine [DirectJDKLog.java:173] Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-02 13:29:22,040 INFO [restartedMain] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring embedded WebApplicationContext
2024-07-02 13:29:22,041 INFO [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:296] Root WebApplicationContext: initialization completed in 1357 ms
2024-07-02 13:29:22,100 INFO [restartedMain] o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:577] Autowired annotation is not supported on static fields: private static final org.slf4j.Logger com.yuanmh.community.controller.interceptor.TestInterceptor.logger
2024-07-02 13:29:22,849 INFO [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping [WelcomePageHandlerMapping.java:59] Adding welcome page template: index
2024-07-02 13:29:23,378 INFO [restartedMain] o.s.b.d.a.OptionalLiveReloadServer [OptionalLiveReloadServer.java:59] LiveReload server is running on port 35729
2024-07-02 13:29:23,427 INFO [restartedMain] o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] Starting ProtocolHandler ["http-nio-8080"]
2024-07-02 13:29:23,438 INFO [restartedMain] o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:243] Tomcat started on port 8080 (http) with context path '/community'
2024-07-02 13:29:23,468 INFO [restartedMain] o.a.k.c.c.ConsumerConfig [AbstractConfig.java:370] ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 3000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-community-consumer-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = community-consumer-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-02 13:29:23,504 INFO [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector [KafkaMetricsCollector.java:297] initializing Kafka metrics collector
2024-07-02 13:29:23,567 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:124] Kafka version: 3.7.0
2024-07-02 13:29:23,568 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:125] Kafka commitId: 2ae524ed625438c5
2024-07-02 13:29:23,568 INFO [restartedMain] o.a.k.c.u.AppInfoParser [AppInfoParser.java:126] Kafka startTimeMs: 1719898163566
2024-07-02 13:29:23,571 INFO [restartedMain] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:475] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Subscribed to topic(s): comment, like, follow
2024-07-02 13:29:23,583 INFO [restartedMain] c.y.c.CommunityApplication [StartupInfoLogger.java:56] Started CommunityApplication in 3.367 seconds (process running for 3.968)
2024-07-02 13:29:23,846 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.Metadata [Metadata.java:349] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Cluster ID: 7MIcq5FwQXmR65Qdj0ZAKA
2024-07-02 13:29:23,846 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:936] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Discovered group coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null)
2024-07-02 13:29:23,850 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:29:23,860 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: need to re-join with the given member-id: consumer-community-consumer-group-1-b734d4f9-641b-4b22-9d89-934cd71f5974
2024-07-02 13:29:23,860 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:604] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] (Re-)joining group
2024-07-02 13:29:23,864 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:665] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully joined group with generation Generation{generationId=57, memberId='consumer-community-consumer-group-1-b734d4f9-641b-4b22-9d89-934cd71f5974', protocol='range'}
2024-07-02 13:29:23,869 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:659] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Finished assignment for group at generation 57: {consumer-community-consumer-group-1-b734d4f9-641b-4b22-9d89-934cd71f5974=Assignment(partitions=[like-0, comment-0, follow-0])}
2024-07-02 13:29:23,874 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:842] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Successfully synced group in generation Generation{generationId=57, memberId='consumer-community-consumer-group-1-b734d4f9-641b-4b22-9d89-934cd71f5974', protocol='range'}
2024-07-02 13:29:23,875 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [ConsumerCoordinator.java:319] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Notifying assignor about the new Assignment(partitions=[like-0, comment-0, follow-0])
2024-07-02 13:29:23,877 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:56] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Adding newly assigned partitions: comment-0, follow-0, like-0
2024-07-02 13:29:23,882 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition comment-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:29:23,883 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition like-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:29:23,883 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerUtils [ConsumerUtils.java:199] Setting offset for partition follow-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[LAPTOP-BI5DQG8F:9092 (id: 0 rack: null)], epoch=0}}
2024-07-02 13:29:23,891 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions assigned: [comment-0, follow-0, like-0]
2024-07-02 13:29:29,532 INFO [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/community] [DirectJDKLog.java:173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-02 13:29:29,533 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:532] Initializing Servlet 'dispatcherServlet'
2024-07-02 13:29:29,534 INFO [http-nio-8080-exec-1] o.s.w.s.DispatcherServlet [FrameworkServlet.java:554] Completed initialization in 1 ms
2024-07-02 13:29:29,562 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:29:29,892 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:29]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:29,913 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:29]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:29:29,925 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:109] HikariPool-1 - Starting...
2024-07-02 13:29:30,180 INFO [http-nio-8080-exec-1] c.z.h.p.HikariPool [HikariPool.java:554] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@12a1f6fb
2024-07-02 13:29:30,181 INFO [http-nio-8080-exec-1] c.z.h.HikariDataSource [HikariDataSource.java:122] HikariPool-1 - Start completed.
2024-07-02 13:29:30,240 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:29:30,247 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:30,262 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:29:30,264 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:30,265 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:30,267 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:29:30,272 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:30,274 INFO [http-nio-8080-exec-1] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:30]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:32,589 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:29:32,591 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:32,592 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:29:32,594 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:29:32,596 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:32,598 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:29:32,599 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:32,600 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:32,602 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:29:32,605 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:32,607 INFO [http-nio-8080-exec-7] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:32]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:33,887 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:29:33,888 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:33,890 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversationsCount]方法
2024-07-02 13:29:33,892 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findConversations]方法
2024-07-02 13:29:33,894 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:33,896 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersCount]方法
2024-07-02 13:29:33,897 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:33,898 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:33,900 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:29:33,902 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:33,903 INFO [http-nio-8080-exec-8] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:33]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:40,374 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:29:40,376 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:40,377 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:40,490 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:40,491 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:40,493 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:40,495 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:40,497 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:40,498 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:40,500 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:40,502 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:40,504 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:40,505 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:40,507 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:40,509 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:40,511 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:29:40,513 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:40,514 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:40]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:41,698 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:29:41,699 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:41,701 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:41,703 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:41,704 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:41,706 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:41,707 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:41,709 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:41,711 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:41,712 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:41,714 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:41,716 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:41,717 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:41,719 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:41,720 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:41,722 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:29:41,723 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:41,724 INFO [http-nio-8080-exec-9] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:41]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:42,490 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findLoginTicket]方法
2024-07-02 13:29:42,491 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:42,493 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:42,495 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:42,496 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:42,497 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:42,499 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:42,500 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:42,501 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:42,503 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:42,505 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLatestNotice]方法
2024-07-02 13:29:42,506 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.UserServiceImpl.findUserById]方法
2024-07-02 13:29:42,507 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:29:42,509 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:42,511 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:42,512 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeUnreadCount]方法
2024-07-02 13:29:42,513 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findLettersUnreadCount]方法
2024-07-02 13:29:42,515 INFO [http-nio-8080-exec-4] c.y.c.a.ServiceLogAspect [ServiceLogAspect.java:47] 用户[0:0:0:0:0:0:0:1]在[2024-07-02 13:29:42]访问了[com.yuanmh.community.service.impl.MessageServiceImpl.findNoticeCount]方法
2024-07-02 13:30:23,787 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerRebalanceListenerInvoker [ConsumerRebalanceListenerInvoker.java:78] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Revoke previously assigned partitions comment-0, follow-0, like-0
2024-07-02 13:30:23,787 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: partitions revoked: [comment-0, follow-0, like-0]
2024-07-02 13:30:23,787 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1163] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Member consumer-community-consumer-group-1-b734d4f9-641b-4b22-9d89-934cd71f5974 sending LeaveGroup request to coordinator LAPTOP-BI5DQG8F:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-02 13:30:23,788 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:30:23,788 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:30:23,788 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.LegacyKafkaConsumer [LegacyKafkaConsumer.java:546] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-02 13:30:23,789 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1055] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-02 13:30:23,789 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator [AbstractCoordinator.java:1102] [Consumer clientId=consumer-community-consumer-group-1, groupId=community-consumer-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-02 13:30:23,811 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:694] Metrics scheduler closed
2024-07-02 13:30:23,812 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-02 13:30:23,812 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:698] Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-02 13:30:23,812 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.m.Metrics [Metrics.java:704] Metrics reporters closed
2024-07-02 13:30:23,817 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.u.AppInfoParser [AppInfoParser.java:88] App info kafka.consumer for consumer-community-consumer-group-1 unregistered
2024-07-02 13:30:23,817 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer [LogAccessor.java:292] community-consumer-group: Consumer stopped
2024-07-02 13:30:23,939 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:349] HikariPool-1 - Shutdown initiated...
2024-07-02 13:30:23,943 INFO [SpringApplicationShutdownHook] c.z.h.HikariDataSource [HikariDataSource.java:351] HikariPool-1 - Shutdown completed.
